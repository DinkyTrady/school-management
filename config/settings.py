"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from os import path
from environ import Env
from pymysql import install_as_MySQLdb
import platform
import shutil

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

install_as_MySQLdb()

env = Env(DEBUG=(bool, False))

Env.read_env(path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--w+v#_h=@l4nxpnkkw^@9goe!b(o%h63^jp@6&=f$6(6k_ypub'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Plugin apps
    'tailwind',
    'tailwindcss_theme',
    'django_extensions',
    'widget_tweaks',
    'django_htmx',

    # Local apps
    'apps.core',
    'apps.users',
    'apps.academics',
    'apps.grades',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',

    # plugin
    'django_htmx.middleware.HtmxMiddleware',

    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': env.db(),
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3'
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if DEBUG:
    INSTALLED_APPS += ['django_browser_reload']
    MIDDLEWARE += [
        'django_browser_reload.middleware.BrowserReloadMiddleware'
    ]

TAILWIND_APP_NAME = 'tailwindcss_theme'

# --- More robust NPM path detection ---
# Try to find npm automatically in the system's PATH first.
# This is the standard and preferred way.
NPM_BIN_PATH = shutil.which('npm')

if not NPM_BIN_PATH:
    # If shutil.which can't find npm (which can happen in isolated environments
    # like the one `uv run` might create), we'll search common installation
    # locations as a fallback.
    system = platform.system()
    possible_paths = []

    if system == 'Windows':
        possible_paths = [
            'C:/Program Files/nodejs/npm.cmd',
            path.expanduser('~/AppData/Roaming/npm/npm.cmd')
        ]
    elif system == 'Darwin':  # macOS
        possible_paths = [
            '/opt/homebrew/bin/npm',
            '/usr/local/bin/npm'
        ]
    else:  # Linux, etc.
        possible_paths = ['/usr/bin/npm', '/usr/local/bin/npm']

    for p in possible_paths:
        if path.exists(p):
            NPM_BIN_PATH = p
            break

# If NPM_BIN_PATH is still not set after all this, django-tailwind will
# raise a descriptive error, which is the desired behavior.

AUTH_USER_MODEL = 'users.akun'

LOGIN_URL = '/users/auth/login/'
LOGIN_REDIRECT_URL = '/'
